## Determines whether nginx should become a daemon and default is on.
daemon  on;

## If master_process is off, there will be only one nginx worker running. Only use it for debug propose.
## Default is on.
master_process  on;

## Define which OS user & group nginx worker processes will run as.
#user  nginx nginx;

## Defines the number of worker processes every of which will be embedded one JVM instance.
## When auto is specified the number of worker processes will be the number of CPU hardware threads
worker_processes  auto;

error_log  logs/error.log;

events {
    ## Defines the number of connections per worker processes.
    ## Note that this number includes all connections (e.g. connections with proxied servers, among others),
    ## not only connections with clients.
    worker_connections  1024;
}


http {
    include       mime.types;

    ## Default mime type for unknown file type
    default_type  'text/html;charset=UTF-8'; ##application/octet-stream;

    ## access log, more details can be found from http://nginx.org/en/docs/http/ngx_http_log_module.html#access_log
    ## when do performance tests try to turn off it, viz. use `access_log off;` instead.
    access_log logs/access.log combined;

    ## Enable gzip,  default is off
    gzip  on;
    gzip_types application/javascript application/xml text/plain text/css 'text/html;charset=UTF-8';
    
    ## Defines the path of JVM, when auto is used nginx-clojure will detect this by itself.
    jvm_path auto;
    

    server {
        listen       5000;
        server_name  localhost;

	location / {
	    content_handler_type 'clojure';
            content_handler_name 'roll.handler/default-handler';
        }

	## although roll hander can handle static resources
        ## we circuit-break it here for better performance
        location /js {
            alias resources/public/js;
        }
        location /css {
            alias resources/public/css;
        }
        location /fonts {
            alias resources/public/fonts;
        }
	location /img {
            alias resources/public/img;
        }
	location /uploads {
	    alias uploads;
	}
    }
}
